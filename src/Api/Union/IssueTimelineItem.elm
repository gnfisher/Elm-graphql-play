-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Union.IssueTimelineItem exposing (Fragments, fragments, maybeFragments)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (FragmentSelectionSet(..), SelectionSet(..))
import Json.Decode as Decode


type alias Fragments decodesTo =
    { onAssignedEvent : SelectionSet decodesTo Api.Object.AssignedEvent
    , onClosedEvent : SelectionSet decodesTo Api.Object.ClosedEvent
    , onCommit : SelectionSet decodesTo Api.Object.Commit
    , onCrossReferencedEvent : SelectionSet decodesTo Api.Object.CrossReferencedEvent
    , onDemilestonedEvent : SelectionSet decodesTo Api.Object.DemilestonedEvent
    , onIssueComment : SelectionSet decodesTo Api.Object.IssueComment
    , onLabeledEvent : SelectionSet decodesTo Api.Object.LabeledEvent
    , onLockedEvent : SelectionSet decodesTo Api.Object.LockedEvent
    , onMilestonedEvent : SelectionSet decodesTo Api.Object.MilestonedEvent
    , onReferencedEvent : SelectionSet decodesTo Api.Object.ReferencedEvent
    , onRenamedTitleEvent : SelectionSet decodesTo Api.Object.RenamedTitleEvent
    , onReopenedEvent : SelectionSet decodesTo Api.Object.ReopenedEvent
    , onSubscribedEvent : SelectionSet decodesTo Api.Object.SubscribedEvent
    , onTransferredEvent : SelectionSet decodesTo Api.Object.TransferredEvent
    , onUnassignedEvent : SelectionSet decodesTo Api.Object.UnassignedEvent
    , onUnlabeledEvent : SelectionSet decodesTo Api.Object.UnlabeledEvent
    , onUnlockedEvent : SelectionSet decodesTo Api.Object.UnlockedEvent
    , onUnsubscribedEvent : SelectionSet decodesTo Api.Object.UnsubscribedEvent
    , onUserBlockedEvent : SelectionSet decodesTo Api.Object.UserBlockedEvent
    }


{-| Build up a selection for this Union by passing in a Fragments record.
-}
fragments :
    Fragments decodesTo
    -> SelectionSet decodesTo Api.Union.IssueTimelineItem
fragments selections =
    Object.exhaustiveFragmentSelection
        [ Object.buildFragment "AssignedEvent" selections.onAssignedEvent
        , Object.buildFragment "ClosedEvent" selections.onClosedEvent
        , Object.buildFragment "Commit" selections.onCommit
        , Object.buildFragment "CrossReferencedEvent" selections.onCrossReferencedEvent
        , Object.buildFragment "DemilestonedEvent" selections.onDemilestonedEvent
        , Object.buildFragment "IssueComment" selections.onIssueComment
        , Object.buildFragment "LabeledEvent" selections.onLabeledEvent
        , Object.buildFragment "LockedEvent" selections.onLockedEvent
        , Object.buildFragment "MilestonedEvent" selections.onMilestonedEvent
        , Object.buildFragment "ReferencedEvent" selections.onReferencedEvent
        , Object.buildFragment "RenamedTitleEvent" selections.onRenamedTitleEvent
        , Object.buildFragment "ReopenedEvent" selections.onReopenedEvent
        , Object.buildFragment "SubscribedEvent" selections.onSubscribedEvent
        , Object.buildFragment "TransferredEvent" selections.onTransferredEvent
        , Object.buildFragment "UnassignedEvent" selections.onUnassignedEvent
        , Object.buildFragment "UnlabeledEvent" selections.onUnlabeledEvent
        , Object.buildFragment "UnlockedEvent" selections.onUnlockedEvent
        , Object.buildFragment "UnsubscribedEvent" selections.onUnsubscribedEvent
        , Object.buildFragment "UserBlockedEvent" selections.onUserBlockedEvent
        ]


{-| Can be used to create a non-exhaustive set of fragments by using the record
update syntax to add `SelectionSet`s for the types you want to handle.
-}
maybeFragments : Fragments (Maybe decodesTo)
maybeFragments =
    { onAssignedEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onClosedEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onCommit = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onCrossReferencedEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onDemilestonedEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onIssueComment = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onLabeledEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onLockedEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onMilestonedEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onReferencedEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onRenamedTitleEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onReopenedEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onSubscribedEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onTransferredEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onUnassignedEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onUnlabeledEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onUnlockedEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onUnsubscribedEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onUserBlockedEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    }
