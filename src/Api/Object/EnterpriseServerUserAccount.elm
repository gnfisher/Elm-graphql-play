-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.EnterpriseServerUserAccount exposing (EmailsOptionalArguments, createdAt, emails, enterpriseServerInstallation, id, isSiteAdmin, login, profileName, remoteCreatedAt, remoteUserId, updatedAt)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Identifies the date and time when the object was created.
-}
createdAt : SelectionSet Api.ScalarCodecs.DateTime Api.Object.EnterpriseServerUserAccount
createdAt =
    Object.selectionForField "ScalarCodecs.DateTime" "createdAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


type alias EmailsOptionalArguments =
    { orderBy : OptionalArgument Api.InputObject.EnterpriseServerUserAccountEmailOrder
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| User emails belonging to this user account.

  - orderBy - Ordering options for Enterprise Server user account emails returned from the connection.
  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
emails : (EmailsOptionalArguments -> EmailsOptionalArguments) -> SelectionSet decodesTo Api.Object.EnterpriseServerUserAccountEmailConnection -> SelectionSet decodesTo Api.Object.EnterpriseServerUserAccount
emails fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { orderBy = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs =
            [ Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeEnterpriseServerUserAccountEmailOrder, Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "emails" optionalArgs object_ identity


{-| The Enterprise Server installation on which this user account exists.
-}
enterpriseServerInstallation : SelectionSet decodesTo Api.Object.EnterpriseServerInstallation -> SelectionSet decodesTo Api.Object.EnterpriseServerUserAccount
enterpriseServerInstallation object_ =
    Object.selectionForCompositeField "enterpriseServerInstallation" [] object_ identity


id : SelectionSet Api.ScalarCodecs.Id Api.Object.EnterpriseServerUserAccount
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| Whether the user account is a site administrator on the Enterprise Server installation.
-}
isSiteAdmin : SelectionSet Bool Api.Object.EnterpriseServerUserAccount
isSiteAdmin =
    Object.selectionForField "Bool" "isSiteAdmin" [] Decode.bool


{-| The login of the user account on the Enterprise Server installation.
-}
login : SelectionSet String Api.Object.EnterpriseServerUserAccount
login =
    Object.selectionForField "String" "login" [] Decode.string


{-| The profile name of the user account on the Enterprise Server installation.
-}
profileName : SelectionSet (Maybe String) Api.Object.EnterpriseServerUserAccount
profileName =
    Object.selectionForField "(Maybe String)" "profileName" [] (Decode.string |> Decode.nullable)


{-| The date and time when the user account was created on the Enterprise Server installation.
-}
remoteCreatedAt : SelectionSet Api.ScalarCodecs.DateTime Api.Object.EnterpriseServerUserAccount
remoteCreatedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "remoteCreatedAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The ID of the user account on the Enterprise Server installation.
-}
remoteUserId : SelectionSet Int Api.Object.EnterpriseServerUserAccount
remoteUserId =
    Object.selectionForField "Int" "remoteUserId" [] Decode.int


{-| Identifies the date and time when the object was last updated.
-}
updatedAt : SelectionSet Api.ScalarCodecs.DateTime Api.Object.EnterpriseServerUserAccount
updatedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "updatedAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)
