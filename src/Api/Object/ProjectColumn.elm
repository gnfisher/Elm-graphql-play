-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.ProjectColumn exposing (CardsOptionalArguments, cards, createdAt, databaseId, id, name, project, purpose, resourcePath, updatedAt, url)

import Api.Enum.ProjectCardArchivedState
import Api.Enum.ProjectColumnPurpose
import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


type alias CardsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , archivedStates : OptionalArgument (List (Maybe Api.Enum.ProjectCardArchivedState.ProjectCardArchivedState))
    }


{-| List of cards in the column

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - archivedStates - A list of archived states to filter the cards by

-}
cards : (CardsOptionalArguments -> CardsOptionalArguments) -> SelectionSet decodesTo Api.Object.ProjectCardConnection -> SelectionSet decodesTo Api.Object.ProjectColumn
cards fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, archivedStates = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "archivedStates" filledInOptionals.archivedStates (Encode.enum Api.Enum.ProjectCardArchivedState.toString |> Encode.maybe |> Encode.list) ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "cards" optionalArgs object_ identity


{-| Identifies the date and time when the object was created.
-}
createdAt : SelectionSet Api.ScalarCodecs.DateTime Api.Object.ProjectColumn
createdAt =
    Object.selectionForField "ScalarCodecs.DateTime" "createdAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| Identifies the primary key from the database.
-}
databaseId : SelectionSet (Maybe Int) Api.Object.ProjectColumn
databaseId =
    Object.selectionForField "(Maybe Int)" "databaseId" [] (Decode.int |> Decode.nullable)


id : SelectionSet Api.ScalarCodecs.Id Api.Object.ProjectColumn
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| The project column's name.
-}
name : SelectionSet String Api.Object.ProjectColumn
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| The project that contains this column.
-}
project : SelectionSet decodesTo Api.Object.Project -> SelectionSet decodesTo Api.Object.ProjectColumn
project object_ =
    Object.selectionForCompositeField "project" [] object_ identity


{-| The semantic purpose of the column
-}
purpose : SelectionSet (Maybe Api.Enum.ProjectColumnPurpose.ProjectColumnPurpose) Api.Object.ProjectColumn
purpose =
    Object.selectionForField "(Maybe Enum.ProjectColumnPurpose.ProjectColumnPurpose)" "purpose" [] (Api.Enum.ProjectColumnPurpose.decoder |> Decode.nullable)


{-| The HTTP path for this project column
-}
resourcePath : SelectionSet Api.ScalarCodecs.Uri Api.Object.ProjectColumn
resourcePath =
    Object.selectionForField "ScalarCodecs.Uri" "resourcePath" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| Identifies the date and time when the object was last updated.
-}
updatedAt : SelectionSet Api.ScalarCodecs.DateTime Api.Object.ProjectColumn
updatedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "updatedAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The HTTP URL for this project column
-}
url : SelectionSet Api.ScalarCodecs.Uri Api.Object.ProjectColumn
url =
    Object.selectionForField "ScalarCodecs.Uri" "url" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecUri |> .decoder)
