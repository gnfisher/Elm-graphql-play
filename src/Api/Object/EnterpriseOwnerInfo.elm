-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.EnterpriseOwnerInfo exposing (ActionExecutionCapabilitySettingOrganizationsOptionalArguments, AdminsOptionalArguments, AffiliatedUsersWithTwoFactorDisabledOptionalArguments, AllowPrivateRepositoryForkingSettingOrganizationsOptionalArguments, AllowPrivateRepositoryForkingSettingOrganizationsRequiredArguments, DefaultRepositoryPermissionSettingOrganizationsOptionalArguments, DefaultRepositoryPermissionSettingOrganizationsRequiredArguments, EnterpriseServerInstallationsOptionalArguments, MembersCanChangeRepositoryVisibilitySettingOrganizationsOptionalArguments, MembersCanChangeRepositoryVisibilitySettingOrganizationsRequiredArguments, MembersCanCreateRepositoriesSettingOrganizationsOptionalArguments, MembersCanCreateRepositoriesSettingOrganizationsRequiredArguments, MembersCanDeleteIssuesSettingOrganizationsOptionalArguments, MembersCanDeleteIssuesSettingOrganizationsRequiredArguments, MembersCanDeleteRepositoriesSettingOrganizationsOptionalArguments, MembersCanDeleteRepositoriesSettingOrganizationsRequiredArguments, MembersCanInviteCollaboratorsSettingOrganizationsOptionalArguments, MembersCanInviteCollaboratorsSettingOrganizationsRequiredArguments, MembersCanUpdateProtectedBranchesSettingOrganizationsOptionalArguments, MembersCanUpdateProtectedBranchesSettingOrganizationsRequiredArguments, MembersCanViewDependencyInsightsSettingOrganizationsOptionalArguments, MembersCanViewDependencyInsightsSettingOrganizationsRequiredArguments, OrganizationProjectsSettingOrganizationsOptionalArguments, OrganizationProjectsSettingOrganizationsRequiredArguments, OutsideCollaboratorsOptionalArguments, PendingAdminInvitationsOptionalArguments, PendingCollaboratorsOptionalArguments, PendingMemberInvitationsOptionalArguments, RepositoryProjectsSettingOrganizationsOptionalArguments, RepositoryProjectsSettingOrganizationsRequiredArguments, SamlIdentityProviderSettingOrganizationsOptionalArguments, SamlIdentityProviderSettingOrganizationsRequiredArguments, TeamDiscussionsSettingOrganizationsOptionalArguments, TeamDiscussionsSettingOrganizationsRequiredArguments, TwoFactorRequiredSettingOrganizationsOptionalArguments, TwoFactorRequiredSettingOrganizationsRequiredArguments, actionExecutionCapabilitySettingOrganizations, admins, affiliatedUsersWithTwoFactorDisabled, affiliatedUsersWithTwoFactorDisabledExist, allowPrivateRepositoryForkingSetting, allowPrivateRepositoryForkingSettingOrganizations, defaultRepositoryPermissionSetting, defaultRepositoryPermissionSettingOrganizations, enterpriseServerInstallations, isUpdatingDefaultRepositoryPermission, isUpdatingTwoFactorRequirement, membersCanChangeRepositoryVisibilitySetting, membersCanChangeRepositoryVisibilitySettingOrganizations, membersCanCreateInternalRepositoriesSetting, membersCanCreatePrivateRepositoriesSetting, membersCanCreatePublicRepositoriesSetting, membersCanCreateRepositoriesSetting, membersCanCreateRepositoriesSettingOrganizations, membersCanDeleteIssuesSetting, membersCanDeleteIssuesSettingOrganizations, membersCanDeleteRepositoriesSetting, membersCanDeleteRepositoriesSettingOrganizations, membersCanInviteCollaboratorsSetting, membersCanInviteCollaboratorsSettingOrganizations, membersCanMakePurchasesSetting, membersCanUpdateProtectedBranchesSetting, membersCanUpdateProtectedBranchesSettingOrganizations, membersCanViewDependencyInsightsSetting, membersCanViewDependencyInsightsSettingOrganizations, organizationProjectsSetting, organizationProjectsSettingOrganizations, outsideCollaborators, pendingAdminInvitations, pendingCollaborators, pendingMemberInvitations, repositoryProjectsSetting, repositoryProjectsSettingOrganizations, samlIdentityProvider, samlIdentityProviderSettingOrganizations, teamDiscussionsSetting, teamDiscussionsSettingOrganizations, twoFactorRequiredSetting, twoFactorRequiredSettingOrganizations)

import Api.Enum.DefaultRepositoryPermissionField
import Api.Enum.EnterpriseAdministratorRole
import Api.Enum.EnterpriseDefaultRepositoryPermissionSettingValue
import Api.Enum.EnterpriseEnabledDisabledSettingValue
import Api.Enum.EnterpriseEnabledSettingValue
import Api.Enum.EnterpriseMembersCanCreateRepositoriesSettingValue
import Api.Enum.EnterpriseMembersCanMakePurchasesSettingValue
import Api.Enum.IdentityProviderConfigurationState
import Api.Enum.OrganizationMembersCanCreateRepositoriesSettingValue
import Api.Enum.RepositoryVisibility
import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


type alias ActionExecutionCapabilitySettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.OrganizationOrder
    }


{-| A list of enterprise organizations configured with the provided action execution capabilities setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - orderBy - Ordering options for organizations with this setting.

-}
actionExecutionCapabilitySettingOrganizations : (ActionExecutionCapabilitySettingOrganizationsOptionalArguments -> ActionExecutionCapabilitySettingOrganizationsOptionalArguments) -> SelectionSet decodesTo Api.Object.OrganizationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
actionExecutionCapabilitySettingOrganizations fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeOrganizationOrder ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "actionExecutionCapabilitySettingOrganizations" optionalArgs object_ identity


type alias AdminsOptionalArguments =
    { query : OptionalArgument String
    , role : OptionalArgument Api.Enum.EnterpriseAdministratorRole.EnterpriseAdministratorRole
    , orderBy : OptionalArgument Api.InputObject.EnterpriseMemberOrder
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of all of the administrators for this enterprise.

  - query - The search string to look for.
  - role - The role to filter by.
  - orderBy - Ordering options for administrators returned from the connection.
  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
admins : (AdminsOptionalArguments -> AdminsOptionalArguments) -> SelectionSet decodesTo Api.Object.EnterpriseAdministratorConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
admins fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { query = Absent, role = Absent, orderBy = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs =
            [ Argument.optional "query" filledInOptionals.query Encode.string, Argument.optional "role" filledInOptionals.role (Encode.enum Api.Enum.EnterpriseAdministratorRole.toString), Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeEnterpriseMemberOrder, Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "admins" optionalArgs object_ identity


type alias AffiliatedUsersWithTwoFactorDisabledOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of users in the enterprise who currently have two-factor authentication disabled.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
affiliatedUsersWithTwoFactorDisabled : (AffiliatedUsersWithTwoFactorDisabledOptionalArguments -> AffiliatedUsersWithTwoFactorDisabledOptionalArguments) -> SelectionSet decodesTo Api.Object.UserConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
affiliatedUsersWithTwoFactorDisabled fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "affiliatedUsersWithTwoFactorDisabled" optionalArgs object_ identity


{-| Whether or not affiliated users with two-factor authentication disabled exist in the enterprise.
-}
affiliatedUsersWithTwoFactorDisabledExist : SelectionSet Bool Api.Object.EnterpriseOwnerInfo
affiliatedUsersWithTwoFactorDisabledExist =
    Object.selectionForField "Bool" "affiliatedUsersWithTwoFactorDisabledExist" [] Decode.bool


{-| The setting value for whether private repository forking is enabled for repositories in organizations in this enterprise.
-}
allowPrivateRepositoryForkingSetting : SelectionSet Api.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Api.Object.EnterpriseOwnerInfo
allowPrivateRepositoryForkingSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "allowPrivateRepositoryForkingSetting" [] Api.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias AllowPrivateRepositoryForkingSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.OrganizationOrder
    }


type alias AllowPrivateRepositoryForkingSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided private repository forking setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
allowPrivateRepositoryForkingSettingOrganizations : (AllowPrivateRepositoryForkingSettingOrganizationsOptionalArguments -> AllowPrivateRepositoryForkingSettingOrganizationsOptionalArguments) -> AllowPrivateRepositoryForkingSettingOrganizationsRequiredArguments -> SelectionSet decodesTo Api.Object.OrganizationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
allowPrivateRepositoryForkingSettingOrganizations fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeOrganizationOrder ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "allowPrivateRepositoryForkingSettingOrganizations" (optionalArgs ++ [ Argument.required "value" requiredArgs.value Encode.bool ]) object_ identity


{-| The setting value for base repository permissions for organizations in this enterprise.
-}
defaultRepositoryPermissionSetting : SelectionSet Api.Enum.EnterpriseDefaultRepositoryPermissionSettingValue.EnterpriseDefaultRepositoryPermissionSettingValue Api.Object.EnterpriseOwnerInfo
defaultRepositoryPermissionSetting =
    Object.selectionForField "Enum.EnterpriseDefaultRepositoryPermissionSettingValue.EnterpriseDefaultRepositoryPermissionSettingValue" "defaultRepositoryPermissionSetting" [] Api.Enum.EnterpriseDefaultRepositoryPermissionSettingValue.decoder


type alias DefaultRepositoryPermissionSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.OrganizationOrder
    }


type alias DefaultRepositoryPermissionSettingOrganizationsRequiredArguments =
    { value : Api.Enum.DefaultRepositoryPermissionField.DefaultRepositoryPermissionField }


{-| A list of enterprise organizations configured with the provided default repository permission.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The permission to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
defaultRepositoryPermissionSettingOrganizations : (DefaultRepositoryPermissionSettingOrganizationsOptionalArguments -> DefaultRepositoryPermissionSettingOrganizationsOptionalArguments) -> DefaultRepositoryPermissionSettingOrganizationsRequiredArguments -> SelectionSet decodesTo Api.Object.OrganizationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
defaultRepositoryPermissionSettingOrganizations fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeOrganizationOrder ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "defaultRepositoryPermissionSettingOrganizations" (optionalArgs ++ [ Argument.required "value" requiredArgs.value (Encode.enum Api.Enum.DefaultRepositoryPermissionField.toString) ]) object_ identity


type alias EnterpriseServerInstallationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , connectedOnly : OptionalArgument Bool
    , orderBy : OptionalArgument Api.InputObject.EnterpriseServerInstallationOrder
    }


{-| Enterprise Server installations owned by the enterprise.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - connectedOnly - Whether or not to only return installations discovered via GitHub Connect.
  - orderBy - Ordering options for Enterprise Server installations returned.

-}
enterpriseServerInstallations : (EnterpriseServerInstallationsOptionalArguments -> EnterpriseServerInstallationsOptionalArguments) -> SelectionSet decodesTo Api.Object.EnterpriseServerInstallationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
enterpriseServerInstallations fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, connectedOnly = Absent, orderBy = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "connectedOnly" filledInOptionals.connectedOnly Encode.bool, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeEnterpriseServerInstallationOrder ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "enterpriseServerInstallations" optionalArgs object_ identity


{-| Whether or not the default repository permission is currently being updated.
-}
isUpdatingDefaultRepositoryPermission : SelectionSet Bool Api.Object.EnterpriseOwnerInfo
isUpdatingDefaultRepositoryPermission =
    Object.selectionForField "Bool" "isUpdatingDefaultRepositoryPermission" [] Decode.bool


{-| Whether the two-factor authentication requirement is currently being enforced.
-}
isUpdatingTwoFactorRequirement : SelectionSet Bool Api.Object.EnterpriseOwnerInfo
isUpdatingTwoFactorRequirement =
    Object.selectionForField "Bool" "isUpdatingTwoFactorRequirement" [] Decode.bool


{-| The setting value for whether organization members with admin permissions on a repository can change repository visibility.
-}
membersCanChangeRepositoryVisibilitySetting : SelectionSet Api.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Api.Object.EnterpriseOwnerInfo
membersCanChangeRepositoryVisibilitySetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "membersCanChangeRepositoryVisibilitySetting" [] Api.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias MembersCanChangeRepositoryVisibilitySettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.OrganizationOrder
    }


type alias MembersCanChangeRepositoryVisibilitySettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided can change repository visibility setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
membersCanChangeRepositoryVisibilitySettingOrganizations : (MembersCanChangeRepositoryVisibilitySettingOrganizationsOptionalArguments -> MembersCanChangeRepositoryVisibilitySettingOrganizationsOptionalArguments) -> MembersCanChangeRepositoryVisibilitySettingOrganizationsRequiredArguments -> SelectionSet decodesTo Api.Object.OrganizationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
membersCanChangeRepositoryVisibilitySettingOrganizations fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeOrganizationOrder ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "membersCanChangeRepositoryVisibilitySettingOrganizations" (optionalArgs ++ [ Argument.required "value" requiredArgs.value Encode.bool ]) object_ identity


{-| The setting value for whether members of organizations in the enterprise can create internal repositories.
-}
membersCanCreateInternalRepositoriesSetting : SelectionSet (Maybe Bool) Api.Object.EnterpriseOwnerInfo
membersCanCreateInternalRepositoriesSetting =
    Object.selectionForField "(Maybe Bool)" "membersCanCreateInternalRepositoriesSetting" [] (Decode.bool |> Decode.nullable)


{-| The setting value for whether members of organizations in the enterprise can create private repositories.
-}
membersCanCreatePrivateRepositoriesSetting : SelectionSet (Maybe Bool) Api.Object.EnterpriseOwnerInfo
membersCanCreatePrivateRepositoriesSetting =
    Object.selectionForField "(Maybe Bool)" "membersCanCreatePrivateRepositoriesSetting" [] (Decode.bool |> Decode.nullable)


{-| The setting value for whether members of organizations in the enterprise can create public repositories.
-}
membersCanCreatePublicRepositoriesSetting : SelectionSet (Maybe Bool) Api.Object.EnterpriseOwnerInfo
membersCanCreatePublicRepositoriesSetting =
    Object.selectionForField "(Maybe Bool)" "membersCanCreatePublicRepositoriesSetting" [] (Decode.bool |> Decode.nullable)


{-| The setting value for whether members of organizations in the enterprise can create repositories.
-}
membersCanCreateRepositoriesSetting : SelectionSet (Maybe Api.Enum.EnterpriseMembersCanCreateRepositoriesSettingValue.EnterpriseMembersCanCreateRepositoriesSettingValue) Api.Object.EnterpriseOwnerInfo
membersCanCreateRepositoriesSetting =
    Object.selectionForField "(Maybe Enum.EnterpriseMembersCanCreateRepositoriesSettingValue.EnterpriseMembersCanCreateRepositoriesSettingValue)" "membersCanCreateRepositoriesSetting" [] (Api.Enum.EnterpriseMembersCanCreateRepositoriesSettingValue.decoder |> Decode.nullable)


type alias MembersCanCreateRepositoriesSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.OrganizationOrder
    }


type alias MembersCanCreateRepositoriesSettingOrganizationsRequiredArguments =
    { value : Api.Enum.OrganizationMembersCanCreateRepositoriesSettingValue.OrganizationMembersCanCreateRepositoriesSettingValue }


{-| A list of enterprise organizations configured with the provided repository creation setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
membersCanCreateRepositoriesSettingOrganizations : (MembersCanCreateRepositoriesSettingOrganizationsOptionalArguments -> MembersCanCreateRepositoriesSettingOrganizationsOptionalArguments) -> MembersCanCreateRepositoriesSettingOrganizationsRequiredArguments -> SelectionSet decodesTo Api.Object.OrganizationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
membersCanCreateRepositoriesSettingOrganizations fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeOrganizationOrder ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "membersCanCreateRepositoriesSettingOrganizations" (optionalArgs ++ [ Argument.required "value" requiredArgs.value (Encode.enum Api.Enum.OrganizationMembersCanCreateRepositoriesSettingValue.toString) ]) object_ identity


{-| The setting value for whether members with admin permissions for repositories can delete issues.
-}
membersCanDeleteIssuesSetting : SelectionSet Api.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Api.Object.EnterpriseOwnerInfo
membersCanDeleteIssuesSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "membersCanDeleteIssuesSetting" [] Api.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias MembersCanDeleteIssuesSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.OrganizationOrder
    }


type alias MembersCanDeleteIssuesSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided members can delete issues setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
membersCanDeleteIssuesSettingOrganizations : (MembersCanDeleteIssuesSettingOrganizationsOptionalArguments -> MembersCanDeleteIssuesSettingOrganizationsOptionalArguments) -> MembersCanDeleteIssuesSettingOrganizationsRequiredArguments -> SelectionSet decodesTo Api.Object.OrganizationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
membersCanDeleteIssuesSettingOrganizations fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeOrganizationOrder ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "membersCanDeleteIssuesSettingOrganizations" (optionalArgs ++ [ Argument.required "value" requiredArgs.value Encode.bool ]) object_ identity


{-| The setting value for whether members with admin permissions for repositories can delete or transfer repositories.
-}
membersCanDeleteRepositoriesSetting : SelectionSet Api.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Api.Object.EnterpriseOwnerInfo
membersCanDeleteRepositoriesSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "membersCanDeleteRepositoriesSetting" [] Api.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias MembersCanDeleteRepositoriesSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.OrganizationOrder
    }


type alias MembersCanDeleteRepositoriesSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided members can delete repositories setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
membersCanDeleteRepositoriesSettingOrganizations : (MembersCanDeleteRepositoriesSettingOrganizationsOptionalArguments -> MembersCanDeleteRepositoriesSettingOrganizationsOptionalArguments) -> MembersCanDeleteRepositoriesSettingOrganizationsRequiredArguments -> SelectionSet decodesTo Api.Object.OrganizationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
membersCanDeleteRepositoriesSettingOrganizations fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeOrganizationOrder ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "membersCanDeleteRepositoriesSettingOrganizations" (optionalArgs ++ [ Argument.required "value" requiredArgs.value Encode.bool ]) object_ identity


{-| The setting value for whether members of organizations in the enterprise can invite outside collaborators.
-}
membersCanInviteCollaboratorsSetting : SelectionSet Api.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Api.Object.EnterpriseOwnerInfo
membersCanInviteCollaboratorsSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "membersCanInviteCollaboratorsSetting" [] Api.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias MembersCanInviteCollaboratorsSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.OrganizationOrder
    }


type alias MembersCanInviteCollaboratorsSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided members can invite collaborators setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
membersCanInviteCollaboratorsSettingOrganizations : (MembersCanInviteCollaboratorsSettingOrganizationsOptionalArguments -> MembersCanInviteCollaboratorsSettingOrganizationsOptionalArguments) -> MembersCanInviteCollaboratorsSettingOrganizationsRequiredArguments -> SelectionSet decodesTo Api.Object.OrganizationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
membersCanInviteCollaboratorsSettingOrganizations fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeOrganizationOrder ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "membersCanInviteCollaboratorsSettingOrganizations" (optionalArgs ++ [ Argument.required "value" requiredArgs.value Encode.bool ]) object_ identity


{-| Indicates whether members of this enterprise's organizations can purchase additional services for those organizations.
-}
membersCanMakePurchasesSetting : SelectionSet Api.Enum.EnterpriseMembersCanMakePurchasesSettingValue.EnterpriseMembersCanMakePurchasesSettingValue Api.Object.EnterpriseOwnerInfo
membersCanMakePurchasesSetting =
    Object.selectionForField "Enum.EnterpriseMembersCanMakePurchasesSettingValue.EnterpriseMembersCanMakePurchasesSettingValue" "membersCanMakePurchasesSetting" [] Api.Enum.EnterpriseMembersCanMakePurchasesSettingValue.decoder


{-| The setting value for whether members with admin permissions for repositories can update protected branches.
-}
membersCanUpdateProtectedBranchesSetting : SelectionSet Api.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Api.Object.EnterpriseOwnerInfo
membersCanUpdateProtectedBranchesSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "membersCanUpdateProtectedBranchesSetting" [] Api.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias MembersCanUpdateProtectedBranchesSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.OrganizationOrder
    }


type alias MembersCanUpdateProtectedBranchesSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided members can update protected branches setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
membersCanUpdateProtectedBranchesSettingOrganizations : (MembersCanUpdateProtectedBranchesSettingOrganizationsOptionalArguments -> MembersCanUpdateProtectedBranchesSettingOrganizationsOptionalArguments) -> MembersCanUpdateProtectedBranchesSettingOrganizationsRequiredArguments -> SelectionSet decodesTo Api.Object.OrganizationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
membersCanUpdateProtectedBranchesSettingOrganizations fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeOrganizationOrder ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "membersCanUpdateProtectedBranchesSettingOrganizations" (optionalArgs ++ [ Argument.required "value" requiredArgs.value Encode.bool ]) object_ identity


{-| The setting value for whether members can view dependency insights.
-}
membersCanViewDependencyInsightsSetting : SelectionSet Api.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Api.Object.EnterpriseOwnerInfo
membersCanViewDependencyInsightsSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "membersCanViewDependencyInsightsSetting" [] Api.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias MembersCanViewDependencyInsightsSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.OrganizationOrder
    }


type alias MembersCanViewDependencyInsightsSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided members can view dependency insights setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
membersCanViewDependencyInsightsSettingOrganizations : (MembersCanViewDependencyInsightsSettingOrganizationsOptionalArguments -> MembersCanViewDependencyInsightsSettingOrganizationsOptionalArguments) -> MembersCanViewDependencyInsightsSettingOrganizationsRequiredArguments -> SelectionSet decodesTo Api.Object.OrganizationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
membersCanViewDependencyInsightsSettingOrganizations fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeOrganizationOrder ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "membersCanViewDependencyInsightsSettingOrganizations" (optionalArgs ++ [ Argument.required "value" requiredArgs.value Encode.bool ]) object_ identity


{-| The setting value for whether organization projects are enabled for organizations in this enterprise.
-}
organizationProjectsSetting : SelectionSet Api.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Api.Object.EnterpriseOwnerInfo
organizationProjectsSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "organizationProjectsSetting" [] Api.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias OrganizationProjectsSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.OrganizationOrder
    }


type alias OrganizationProjectsSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided organization projects setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
organizationProjectsSettingOrganizations : (OrganizationProjectsSettingOrganizationsOptionalArguments -> OrganizationProjectsSettingOrganizationsOptionalArguments) -> OrganizationProjectsSettingOrganizationsRequiredArguments -> SelectionSet decodesTo Api.Object.OrganizationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
organizationProjectsSettingOrganizations fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeOrganizationOrder ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "organizationProjectsSettingOrganizations" (optionalArgs ++ [ Argument.required "value" requiredArgs.value Encode.bool ]) object_ identity


type alias OutsideCollaboratorsOptionalArguments =
    { login : OptionalArgument String
    , query : OptionalArgument String
    , orderBy : OptionalArgument Api.InputObject.EnterpriseMemberOrder
    , visibility : OptionalArgument Api.Enum.RepositoryVisibility.RepositoryVisibility
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of outside collaborators across the repositories in the enterprise.

  - login - The login of one specific outside collaborator.
  - query - The search string to look for.
  - orderBy - Ordering options for outside collaborators returned from the connection.
  - visibility - Only return outside collaborators on repositories with this visibility.
  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
outsideCollaborators : (OutsideCollaboratorsOptionalArguments -> OutsideCollaboratorsOptionalArguments) -> SelectionSet decodesTo Api.Object.EnterpriseOutsideCollaboratorConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
outsideCollaborators fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { login = Absent, query = Absent, orderBy = Absent, visibility = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs =
            [ Argument.optional "login" filledInOptionals.login Encode.string, Argument.optional "query" filledInOptionals.query Encode.string, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeEnterpriseMemberOrder, Argument.optional "visibility" filledInOptionals.visibility (Encode.enum Api.Enum.RepositoryVisibility.toString), Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "outsideCollaborators" optionalArgs object_ identity


type alias PendingAdminInvitationsOptionalArguments =
    { query : OptionalArgument String
    , orderBy : OptionalArgument Api.InputObject.EnterpriseAdministratorInvitationOrder
    , role : OptionalArgument Api.Enum.EnterpriseAdministratorRole.EnterpriseAdministratorRole
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of pending administrator invitations for the enterprise.

  - query - The search string to look for.
  - orderBy - Ordering options for pending enterprise administrator invitations returned from the connection.
  - role - The role to filter by.
  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
pendingAdminInvitations : (PendingAdminInvitationsOptionalArguments -> PendingAdminInvitationsOptionalArguments) -> SelectionSet decodesTo Api.Object.EnterpriseAdministratorInvitationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
pendingAdminInvitations fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { query = Absent, orderBy = Absent, role = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs =
            [ Argument.optional "query" filledInOptionals.query Encode.string, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeEnterpriseAdministratorInvitationOrder, Argument.optional "role" filledInOptionals.role (Encode.enum Api.Enum.EnterpriseAdministratorRole.toString), Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "pendingAdminInvitations" optionalArgs object_ identity


type alias PendingCollaboratorsOptionalArguments =
    { query : OptionalArgument String
    , orderBy : OptionalArgument Api.InputObject.RepositoryInvitationOrder
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of pending collaborators across the repositories in the enterprise.

  - query - The search string to look for.
  - orderBy - Ordering options for pending repository collaborator invitations returned from the connection.
  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
pendingCollaborators : (PendingCollaboratorsOptionalArguments -> PendingCollaboratorsOptionalArguments) -> SelectionSet decodesTo Api.Object.EnterprisePendingCollaboratorConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
pendingCollaborators fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { query = Absent, orderBy = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs =
            [ Argument.optional "query" filledInOptionals.query Encode.string, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeRepositoryInvitationOrder, Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "pendingCollaborators" optionalArgs object_ identity


type alias PendingMemberInvitationsOptionalArguments =
    { query : OptionalArgument String
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of pending member invitations for organizations in the enterprise.

  - query - The search string to look for.
  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
pendingMemberInvitations : (PendingMemberInvitationsOptionalArguments -> PendingMemberInvitationsOptionalArguments) -> SelectionSet decodesTo Api.Object.EnterprisePendingMemberInvitationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
pendingMemberInvitations fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { query = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs =
            [ Argument.optional "query" filledInOptionals.query Encode.string, Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "pendingMemberInvitations" optionalArgs object_ identity


{-| The setting value for whether repository projects are enabled in this enterprise.
-}
repositoryProjectsSetting : SelectionSet Api.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Api.Object.EnterpriseOwnerInfo
repositoryProjectsSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "repositoryProjectsSetting" [] Api.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias RepositoryProjectsSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.OrganizationOrder
    }


type alias RepositoryProjectsSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided repository projects setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
repositoryProjectsSettingOrganizations : (RepositoryProjectsSettingOrganizationsOptionalArguments -> RepositoryProjectsSettingOrganizationsOptionalArguments) -> RepositoryProjectsSettingOrganizationsRequiredArguments -> SelectionSet decodesTo Api.Object.OrganizationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
repositoryProjectsSettingOrganizations fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeOrganizationOrder ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "repositoryProjectsSettingOrganizations" (optionalArgs ++ [ Argument.required "value" requiredArgs.value Encode.bool ]) object_ identity


{-| The SAML Identity Provider for the enterprise.
-}
samlIdentityProvider : SelectionSet decodesTo Api.Object.EnterpriseIdentityProvider -> SelectionSet (Maybe decodesTo) Api.Object.EnterpriseOwnerInfo
samlIdentityProvider object_ =
    Object.selectionForCompositeField "samlIdentityProvider" [] object_ (identity >> Decode.nullable)


type alias SamlIdentityProviderSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.OrganizationOrder
    }


type alias SamlIdentityProviderSettingOrganizationsRequiredArguments =
    { value : Api.Enum.IdentityProviderConfigurationState.IdentityProviderConfigurationState }


{-| A list of enterprise organizations configured with the SAML single sign-on setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
samlIdentityProviderSettingOrganizations : (SamlIdentityProviderSettingOrganizationsOptionalArguments -> SamlIdentityProviderSettingOrganizationsOptionalArguments) -> SamlIdentityProviderSettingOrganizationsRequiredArguments -> SelectionSet decodesTo Api.Object.OrganizationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
samlIdentityProviderSettingOrganizations fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeOrganizationOrder ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "samlIdentityProviderSettingOrganizations" (optionalArgs ++ [ Argument.required "value" requiredArgs.value (Encode.enum Api.Enum.IdentityProviderConfigurationState.toString) ]) object_ identity


{-| The setting value for whether team discussions are enabled for organizations in this enterprise.
-}
teamDiscussionsSetting : SelectionSet Api.Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue Api.Object.EnterpriseOwnerInfo
teamDiscussionsSetting =
    Object.selectionForField "Enum.EnterpriseEnabledDisabledSettingValue.EnterpriseEnabledDisabledSettingValue" "teamDiscussionsSetting" [] Api.Enum.EnterpriseEnabledDisabledSettingValue.decoder


type alias TeamDiscussionsSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.OrganizationOrder
    }


type alias TeamDiscussionsSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the provided team discussions setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
teamDiscussionsSettingOrganizations : (TeamDiscussionsSettingOrganizationsOptionalArguments -> TeamDiscussionsSettingOrganizationsOptionalArguments) -> TeamDiscussionsSettingOrganizationsRequiredArguments -> SelectionSet decodesTo Api.Object.OrganizationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
teamDiscussionsSettingOrganizations fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeOrganizationOrder ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "teamDiscussionsSettingOrganizations" (optionalArgs ++ [ Argument.required "value" requiredArgs.value Encode.bool ]) object_ identity


{-| The setting value for whether the enterprise requires two-factor authentication for its organizations and users.
-}
twoFactorRequiredSetting : SelectionSet Api.Enum.EnterpriseEnabledSettingValue.EnterpriseEnabledSettingValue Api.Object.EnterpriseOwnerInfo
twoFactorRequiredSetting =
    Object.selectionForField "Enum.EnterpriseEnabledSettingValue.EnterpriseEnabledSettingValue" "twoFactorRequiredSetting" [] Api.Enum.EnterpriseEnabledSettingValue.decoder


type alias TwoFactorRequiredSettingOrganizationsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.OrganizationOrder
    }


type alias TwoFactorRequiredSettingOrganizationsRequiredArguments =
    { value : Bool }


{-| A list of enterprise organizations configured with the two-factor authentication setting value.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - value - The setting value to find organizations for.
  - orderBy - Ordering options for organizations with this setting.

-}
twoFactorRequiredSettingOrganizations : (TwoFactorRequiredSettingOrganizationsOptionalArguments -> TwoFactorRequiredSettingOrganizationsOptionalArguments) -> TwoFactorRequiredSettingOrganizationsRequiredArguments -> SelectionSet decodesTo Api.Object.OrganizationConnection -> SelectionSet decodesTo Api.Object.EnterpriseOwnerInfo
twoFactorRequiredSettingOrganizations fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Api.InputObject.encodeOrganizationOrder ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "twoFactorRequiredSettingOrganizations" (optionalArgs ++ [ Argument.required "value" requiredArgs.value Encode.bool ]) object_ identity
