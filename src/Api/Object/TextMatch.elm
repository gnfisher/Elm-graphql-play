-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.TextMatch exposing (fragment, highlights, property)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The specific text fragment within the property matched on.
-}
fragment : SelectionSet String Api.Object.TextMatch
fragment =
    Object.selectionForField "String" "fragment" [] Decode.string


{-| Highlights within the matched fragment.
-}
highlights : SelectionSet decodesTo Api.Object.TextMatchHighlight -> SelectionSet (List decodesTo) Api.Object.TextMatch
highlights object_ =
    Object.selectionForCompositeField "highlights" [] object_ (identity >> Decode.list)


{-| The property matched on.
-}
property : SelectionSet String Api.Object.TextMatch
property =
    Object.selectionForField "String" "property" [] Decode.string
